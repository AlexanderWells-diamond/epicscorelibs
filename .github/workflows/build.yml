name: epicscorelibs

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}/${{ matrix.python }}/${{ matrix.pyver }}/${{ matrix.piparch }}/${{ matrix.profile }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:

          # Linux py builds x64
          - os: ubuntu-latest
            pyver: cp27-cp27m
            piparch: manylinux1_x86_64
            source: true

          - os: ubuntu-latest
            pyver: cp27-cp27mu
            piparch: manylinux1_x86_64

          - os: ubuntu-latest
            pyver: cp35-cp35m
            piparch: manylinux1_x86_64

          - os: ubuntu-latest
            pyver: cp36-cp36m
            piparch: manylinux1_x86_64

          - os: ubuntu-latest
            pyver: cp37-cp37m
            piparch: manylinux1_x86_64

          - os: ubuntu-latest
            pyver: cp38-cp38
            piparch: manylinux1_x86_64

          - os: ubuntu-latest
            pyver: cp39-cp39
            piparch: manylinux1_x86_64

          # Linux py builds x64
          - os: ubuntu-latest
            pyver: cp27-cp27m
            piparch: manylinux1_i686
            pre: linux32

          - os: ubuntu-latest
            pyver: cp27-cp27mu
            piparch: manylinux1_i686
            pre: linux32

          - os: ubuntu-latest
            pyver: cp35-cp35m
            piparch: manylinux1_i686
            pre: linux32

          - os: ubuntu-latest
            pyver: cp36-cp36m
            piparch: manylinux1_i686
            pre: linux32

          - os: ubuntu-latest
            pyver: cp37-cp37m
            piparch: manylinux1_i686
            pre: linux32

          - os: ubuntu-latest
            pyver: cp38-cp38
            piparch: manylinux1_i686
            pre: linux32

          - os: ubuntu-latest
            pyver: cp39-cp39
            piparch: manylinux1_i686
            pre: linux32

          # OSX py builds
          - os: macos-latest
            python: "2.7"
            piparch: macosx_10_9_intel

          - os: macos-latest
            python: "3.6"
            piparch: macosx_10_9_intel

          - os: macos-latest
            python: "3.7"
            piparch: macosx_10_9_intel

          - os: macos-latest
            python: "3.8"
            piparch: macosx_10_9_intel

          - os: macos-latest
            python: "3.9"
            piparch: macosx_10_9_intel

          # Windows py builds

          ## missing Microsoft Visual C++ 9.0
          #- os: windows-latest
          #  python: "2.7"
          #  piparch: win_amd64

          - os: windows-latest
            python: "3.5"
            piparch: win_amd64

          - os: windows-latest
            python: "3.6"
            piparch: win_amd64

          - os: windows-latest
            python: "3.7"
            piparch: win_amd64

          - os: windows-latest
            python: "3.8"
            piparch: win_amd64

          - os: windows-latest
            python: "3.9"
            piparch: win_amd64

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup native python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python || '3.7' }}
          #architecture: x64

      - name: Native Info
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine
          which python
          python --version
          python -m pip --version
          python -m twine -h

      - name: Native PY build
        if: matrix.python
        run: |
          python cibuild.py prepare build ${{ matrix.piparch }}

      - name: Docker PY build
        if: matrix.pyver
        run: |
          docker pull quay.io/pypa/${{ matrix.piparch }}
          docker run --rm -v `pwd`:/io quay.io/pypa/${{ matrix.piparch }} \
           ${{ matrix.pre }} "/opt/python/${{ matrix.pyver }}/bin/python" /io/cibuild.py \
            docker prepare build ${{ matrix.piparch }}

      - name: List Artifacts
        run: ls dist/*

      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: epicscorelibs
          path: dist/*

      - name: Upload wheels
        if: github.event_name=='push' && github.ref=='refs/heads/master'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload --skip-existing dist/*.whl

      - name: Upload source
        if: github.event_name=='push' && github.ref=='refs/heads/master' && matrix.source
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload --skip-existing dist/*.tar.*
